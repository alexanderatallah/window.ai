import type { RefObject } from "react"
import { useEffect } from "react"

// NOTE: this was mostly generated by GPT-4, don't fully understand it yet
export function useInfiniteScroll<T extends HTMLElement>(
  ref: RefObject<T>,
  callback: () => void,
  shouldObserve: boolean = true,
  threshold: number = 0
) {
  useEffect(() => {
    if (!ref.current || !shouldObserve) {
      // Don't observe if unmounted or overridden
      return
    }

    const observer = new IntersectionObserver(
      (entries) => {
        const firstEntry = entries[0]

        if (firstEntry.isIntersecting) {
          callback()
        }
      },
      { threshold }
    )

    observer.observe(ref.current)

    return () => {
      observer.disconnect()
    }
  }, [ref, callback, shouldObserve, threshold])
}
